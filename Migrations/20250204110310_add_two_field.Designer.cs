// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using keepaAPI.DBContext;

#nullable disable

namespace keepaAPI.Migrations
{
    [DbContext(typeof(KeepaDbContext))]
    [Migration("20250204110310_add_two_field")]
    partial class add_two_field
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eans");
                });

            modelBuilder.Entity("UnitCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UnitCounts");
                });

            modelBuilder.Entity("Upc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Upcs");
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentAsin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("VariationCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Variations");
                });

            modelBuilder.Entity("keepaAPI.Structs.Ean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Ean");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvailabilityAmazon")
                        .HasColumnType("int");

                    b.Property<string>("Binding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BuyBoxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategoryTree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompetitivePriceThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("DomainId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrequentlyBoughtTogether")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("G")
                        .HasColumnType("int");

                    b.Property<string>("HazardousMaterials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagesCSV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdultProduct")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsB2B")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEligibleForSuperSaverShipping")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEligibleForTradeIn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeatSensitive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRedirectASIN")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSNS")
                        .HasColumnType("bit");

                    b.Property<string>("ItemForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemHeight")
                        .HasColumnType("int");

                    b.Property<int?>("ItemLength")
                        .HasColumnType("int");

                    b.Property<string>("ItemTypeKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemWeight")
                        .HasColumnType("int");

                    b.Property<int?>("ItemWidth")
                        .HasColumnType("int");

                    b.Property<int?>("LastEbayUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("LastRatingUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("LastSoldUpdate")
                        .HasColumnType("int");

                    b.Property<bool?>("Launchpad")
                        .HasColumnType("bit");

                    b.Property<int?>("ListedSince")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonthlySold")
                        .HasColumnType("int");

                    b.Property<bool?>("NewPriceIsMAP")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfItems")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<bool?>("OffersSuccessful")
                        .HasColumnType("bit");

                    b.Property<int?>("PackageHeight")
                        .HasColumnType("int");

                    b.Property<int?>("PackageLength")
                        .HasColumnType("int");

                    b.Property<int?>("PackageQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("PackageWeight")
                        .HasColumnType("int");

                    b.Property<int?>("PackageWidth")
                        .HasColumnType("int");

                    b.Property<string>("ParentAsin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublicationDate")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReferralFeePercent")
                        .HasColumnType("int");

                    b.Property<double?>("ReferralFeePercentage")
                        .HasColumnType("float");

                    b.Property<int?>("ReleaseDate")
                        .HasColumnType("int");

                    b.Property<long?>("RootCategory")
                        .HasColumnType("bigint");

                    b.Property<string>("SafetyWarning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesRankOnMainCategory")
                        .HasColumnType("int");

                    b.Property<int?>("SalesRankReference")
                        .HasColumnType("int");

                    b.Property<int?>("SalesRanks")
                        .HasColumnType("int");

                    b.Property<string>("Scent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAudienceKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrackingSince")
                        .HasColumnType("int");

                    b.Property<int?>("UnitCountId")
                        .HasColumnType("int");

                    b.Property<string>("UrlSlug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariationCSV")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UnitCountId")
                        .IsUnique()
                        .HasFilter("[UnitCountId] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("keepaAPI.Structs.Upc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Upc");
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("Variations")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.Ean", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("EanList")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.HasOne("UnitCount", "UnitCount")
                        .WithOne()
                        .HasForeignKey("keepaAPI.Structs.ProductForBrandTrader", "UnitCountId");

                    b.Navigation("UnitCount");
                });

            modelBuilder.Entity("keepaAPI.Structs.Upc", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("UpcList")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.Navigation("EanList");

                    b.Navigation("UpcList");

                    b.Navigation("Variations");
                });
#pragma warning restore 612, 618
        }
    }
}
