// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using keepaAPI.DBContext;

#nullable disable

namespace keepaAPI.Migrations
{
    [DbContext(typeof(KeepaDbContext))]
    [Migration("20250201113648_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eans");
                });

            modelBuilder.Entity("UnitCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UnitCounts");

                    b.HasAnnotation("Relational:JsonPropertyName", "unitCount");
                });

            modelBuilder.Entity("Upc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Upcs");
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentAsin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("VariationCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Variations");

                    b.HasAnnotation("Relational:JsonPropertyName", "variations");
                });

            modelBuilder.Entity("keepaAPI.Structs.Ean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Ean");

                    b.HasAnnotation("Relational:JsonPropertyName", "eanList");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "asin");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "author");

                    b.Property<int>("AvailabilityAmazon")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "availabilityAmazon");

                    b.Property<string>("Binding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "binding");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<decimal>("BuyBoxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategoryTree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "categoryTree");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "color");

                    b.Property<int>("CompetitivePriceThreshold")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "competitivePriceThreshold");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<byte>("DomainId")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "domainId");

                    b.Property<string>("EbayListingIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ebayListingIds");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "edition");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "features");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "format");

                    b.Property<string>("FrequentlyBoughtTogether")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "frequentlyBoughtTogether");

                    b.Property<int>("G")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "g");

                    b.Property<string>("HazardousMaterials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hazardousMaterials");

                    b.Property<string>("ImagesCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "imagesCSV");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ingredients");

                    b.Property<bool>("IsAdultProduct")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isAdultProduct");

                    b.Property<bool>("IsB2B")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isB2B");

                    b.Property<bool>("IsEligibleForSuperSaverShipping")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isEligibleForSuperSaverShipping");

                    b.Property<bool>("IsEligibleForTradeIn")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isEligibleForTradeIn");

                    b.Property<bool>("IsHeatSensitive")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isHeatSensitive");

                    b.Property<bool>("IsRedirectASIN")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isRedirectASIN");

                    b.Property<bool>("IsSNS")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isSNS");

                    b.Property<string>("ItemForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "itemForm");

                    b.Property<int>("ItemHeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemHeight");

                    b.Property<int>("ItemLength")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemLength");

                    b.Property<string>("ItemTypeKeyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "itemTypeKeyword");

                    b.Property<int>("ItemWeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemWeight");

                    b.Property<int>("ItemWidth")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemWidth");

                    b.Property<int>("LastEbayUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastEbayUpdate");

                    b.Property<int>("LastRatingUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastRatingUpdate");

                    b.Property<int>("LastSoldUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastSoldUpdate");

                    b.Property<bool>("Launchpad")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "launchpad");

                    b.Property<int>("ListedSince")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "listedSince");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "model");

                    b.Property<int>("MonthlySold")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "monthlySold");

                    b.Property<bool>("NewPriceIsMAP")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "newPriceIsMAP");

                    b.Property<int>("NumberOfItems")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "numberOfItems");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "numberOfPages");

                    b.Property<bool>("OffersSuccessful")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "offersSuccessful");

                    b.Property<int>("PackageHeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageHeight");

                    b.Property<int>("PackageLength")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageLength");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageQuantity");

                    b.Property<int>("PackageWeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageWeight");

                    b.Property<int>("PackageWidth")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageWidth");

                    b.Property<string>("ParentAsin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "parentAsin");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "partNumber");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "productGroup");

                    b.Property<int>("PublicationDate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "publicationDate");

                    b.Property<int>("ReferralFeePercent")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "referralFeePercent");

                    b.Property<double>("ReferralFeePercentage")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "referralFeePercentage");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "releaseDate");

                    b.Property<long>("RootCategory")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "rootCategory");

                    b.Property<string>("SafetyWarning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "safetyWarning");

                    b.Property<int>("SalesRankReference")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "salesRankReference");

                    b.Property<int>("SalesRanks")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "salesRanks");

                    b.Property<string>("Scent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "scent");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "style");

                    b.Property<string>("TargetAudienceKeyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "targetAudienceKeyword");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<int>("TrackingSince")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "trackingSince");

                    b.Property<int>("UnitCountId")
                        .HasColumnType("int");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "urlSlug");

                    b.Property<string>("VariationCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "variationCSV");

                    b.HasKey("Id");

                    b.HasIndex("UnitCountId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("keepaAPI.Structs.Upc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductForBrandTraderId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductForBrandTraderId");

                    b.ToTable("Upc");

                    b.HasAnnotation("Relational:JsonPropertyName", "upcList");
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("Variations")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.Ean", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("EanList")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.HasOne("UnitCount", "UnitCount")
                        .WithOne()
                        .HasForeignKey("keepaAPI.Structs.ProductForBrandTrader", "UnitCountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitCount");
                });

            modelBuilder.Entity("keepaAPI.Structs.Upc", b =>
                {
                    b.HasOne("keepaAPI.Structs.ProductForBrandTrader", null)
                        .WithMany("UpcList")
                        .HasForeignKey("ProductForBrandTraderId");
                });

            modelBuilder.Entity("keepaAPI.Structs.ProductForBrandTrader", b =>
                {
                    b.Navigation("EanList");

                    b.Navigation("UpcList");

                    b.Navigation("Variations");
                });
#pragma warning restore 612, 618
        }
    }
}
