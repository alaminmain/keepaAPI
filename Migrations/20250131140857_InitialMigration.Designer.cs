// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace keepaAPI.Migrations
{
    [DbContext(typeof(KeepaDbContext))]
    [Migration("20250131140857_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuyBoxEligibleOfferCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BuyBoxEligibleOfferCounts");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Categories");

                    b.HasAnnotation("Relational:JsonPropertyName", "categories");
                });

            modelBuilder.Entity("CategoryTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryTrees");

                    b.HasAnnotation("Relational:JsonPropertyName", "categoryTree");
                });

            modelBuilder.Entity("Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Contributors");

                    b.HasAnnotation("Relational:JsonPropertyName", "contributors");
                });

            modelBuilder.Entity("CouponHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("CouponHistories");

                    b.HasAnnotation("Relational:JsonPropertyName", "couponHistory");
                });

            modelBuilder.Entity("Csv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Csvs");
                });

            modelBuilder.Entity("Ean", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Eans");

                    b.HasAnnotation("Relational:JsonPropertyName", "eanList");
                });

            modelBuilder.Entity("FbaFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PickAndPackFee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FbaFees");
                });

            modelBuilder.Entity("Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Features");

                    b.HasAnnotation("Relational:JsonPropertyName", "features");
                });

            modelBuilder.Entity("FrequentlyBought", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("FrequentlyBoughts");

                    b.HasAnnotation("Relational:JsonPropertyName", "frequentlyBoughtTogether");
                });

            modelBuilder.Entity("HazardousMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aspect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("HazardousMaterials");

                    b.HasAnnotation("Relational:JsonPropertyName", "hazardousMaterials");
                });

            modelBuilder.Entity("Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Languages");

                    b.HasAnnotation("Relational:JsonPropertyName", "languages");
                });

            modelBuilder.Entity("Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Condition")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "condition");

                    b.Property<string>("ConditionComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "conditionComment");

                    b.Property<int>("Coupon")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "coupon");

                    b.Property<bool>("IsAddonItem")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isAddonItem");

                    b.Property<bool>("IsAmazon")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isAmazon");

                    b.Property<bool>("IsFBA")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isFBA");

                    b.Property<bool>("IsMAP")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isMAP");

                    b.Property<bool>("IsPreorder")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isPreorder");

                    b.Property<bool>("IsPrime")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isPrime");

                    b.Property<bool>("IsPrimeExcl")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isPrimeExcl");

                    b.Property<bool>("IsScam")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isScam");

                    b.Property<bool>("IsShippable")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isShippable");

                    b.Property<bool>("IsWarehouseDeal")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isWarehouseDeal");

                    b.Property<int>("LastSeen")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastSeen");

                    b.Property<int>("OfferId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "offerId");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sellerId");

                    b.Property<bool>("ShipsFromChina")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "shipsFromChina");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Offers");

                    b.HasAnnotation("Relational:JsonPropertyName", "offers");
                });

            modelBuilder.Entity("OfferCsv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferCsvs");

                    b.HasAnnotation("Relational:JsonPropertyName", "offerCSV");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "asin");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "author");

                    b.Property<int>("AvailabilityAmazon")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "availabilityAmazon");

                    b.Property<string>("Binding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "binding");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.PrimitiveCollection<string>("BuyBoxEligibleOfferCounts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "buyBoxEligibleOfferCounts");

                    b.Property<string>("BuyBoxSellerIdHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "buyBoxSellerIdHistory");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "color");

                    b.Property<int>("CompetitivePriceThreshold")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "competitivePriceThreshold");

                    b.PrimitiveCollection<string>("Coupon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "coupon");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<byte>("DomainId")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "domainId");

                    b.Property<string>("EbayListingIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ebayListingIds");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "edition");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "format");

                    b.Property<int>("G")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "g");

                    b.Property<string>("ImagesCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "imagesCSV");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ingredients");

                    b.Property<bool>("IsAdultProduct")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isAdultProduct");

                    b.Property<bool>("IsB2B")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isB2B");

                    b.Property<bool>("IsEligibleForSuperSaverShipping")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isEligibleForSuperSaverShipping");

                    b.Property<bool>("IsEligibleForTradeIn")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isEligibleForTradeIn");

                    b.Property<bool>("IsHeatSensitive")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isHeatSensitive");

                    b.Property<bool>("IsRedirectASIN")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isRedirectASIN");

                    b.Property<bool>("IsSNS")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isSNS");

                    b.Property<string>("ItemForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "itemForm");

                    b.Property<int>("ItemHeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemHeight");

                    b.Property<int>("ItemLength")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemLength");

                    b.Property<string>("ItemTypeKeyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "itemTypeKeyword");

                    b.Property<int>("ItemWeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemWeight");

                    b.Property<int>("ItemWidth")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "itemWidth");

                    b.Property<int>("LastEbayUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastEbayUpdate");

                    b.Property<int>("LastRatingUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastRatingUpdate");

                    b.Property<int>("LastSoldUpdate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "lastSoldUpdate");

                    b.Property<bool>("Launchpad")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "launchpad");

                    b.Property<int>("ListedSince")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "listedSince");

                    b.PrimitiveCollection<string>("LiveOffersOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "liveOffersOrder");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "model");

                    b.Property<int>("MonthlySold")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "monthlySold");

                    b.Property<bool>("NewPriceIsMAP")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "newPriceIsMAP");

                    b.Property<int>("NumberOfItems")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "numberOfItems");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "numberOfPages");

                    b.Property<bool>("OffersSuccessful")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "offersSuccessful");

                    b.Property<int>("PackageHeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageHeight");

                    b.Property<int>("PackageLength")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageLength");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageQuantity");

                    b.Property<int>("PackageWeight")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageWeight");

                    b.Property<int>("PackageWidth")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "packageWidth");

                    b.Property<string>("ParentAsin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "parentAsin");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "partNumber");

                    b.Property<string>("ProductGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "productGroup");

                    b.Property<int?>("ProductResponseId")
                        .HasColumnType("int");

                    b.Property<int>("PublicationDate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "publicationDate");

                    b.Property<int>("ReferralFeePercent")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "referralFeePercent");

                    b.Property<double>("ReferralFeePercentage")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "referralFeePercentage");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "releaseDate");

                    b.Property<long>("RootCategory")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "rootCategory");

                    b.Property<string>("SafetyWarning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "safetyWarning");

                    b.Property<int>("SalesRankReference")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "salesRankReference");

                    b.Property<string>("Scent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "scent");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "style");

                    b.Property<string>("TargetAudienceKeyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "targetAudienceKeyword");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<int>("TrackingSince")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "trackingSince");

                    b.Property<int>("UnitCountId")
                        .HasColumnType("int");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "urlSlug");

                    b.Property<string>("VariationCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "variationCSV");

                    b.HasKey("Id");

                    b.HasIndex("ProductResponseId");

                    b.HasIndex("UnitCountId");

                    b.ToTable("Products");

                    b.HasAnnotation("Relational:JsonPropertyName", "products");
                });

            modelBuilder.Entity("ProductResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProcessingTimeInMs")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "processingTimeInMs");

                    b.Property<int>("RefillIn")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "refillIn");

                    b.Property<int>("RefillRate")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "refillRate");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "timestamp");

                    b.Property<double>("TokenFlowReduction")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "tokenFlowReduction");

                    b.Property<int>("TokensConsumed")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "tokensConsumed");

                    b.Property<int>("TokensLeft")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "tokensLeft");

                    b.HasKey("Id");

                    b.ToTable("ProductResponses");
                });

            modelBuilder.Entity("Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BenefitDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<string>("EligibilityRequirementDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("PromotionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Promotions");

                    b.HasAnnotation("Relational:JsonPropertyName", "promotions");
                });

            modelBuilder.Entity("SalesRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("SalesRanks");

                    b.HasAnnotation("Relational:JsonPropertyName", "salesRanks");
                });

            modelBuilder.Entity("SalesRankReferenceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("SalesRankReferenceHistories");

                    b.HasAnnotation("Relational:JsonPropertyName", "salesRankReferenceHistory");
                });

            modelBuilder.Entity("StockCsv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("StockCsvs");

                    b.HasAnnotation("Relational:JsonPropertyName", "stockCSV");
                });

            modelBuilder.Entity("UnitCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UnitCounts");

                    b.HasAnnotation("Relational:JsonPropertyName", "unitCount");
                });

            modelBuilder.Entity("Upc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Upcs");

                    b.HasAnnotation("Relational:JsonPropertyName", "upcList");
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentAsin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("VariationCSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variations");

                    b.HasAnnotation("Relational:JsonPropertyName", "variations");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CategoryTree", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("CategoryTree")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Contributor", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Contributors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CouponHistory", b =>
                {
                    b.HasOne("Offer", null)
                        .WithMany("CouponHistory")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ean", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("EanList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Feature", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Features")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FrequentlyBought", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("FrequentlyBoughtTogether")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HazardousMaterial", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("HazardousMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Language", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Languages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Offer", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Offers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OfferCsv", b =>
                {
                    b.HasOne("Offer", null)
                        .WithMany("OfferCSV")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("ProductResponse", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductResponseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UnitCount", "UnitCount")
                        .WithMany()
                        .HasForeignKey("UnitCountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitCount");
                });

            modelBuilder.Entity("Promotion", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Promotions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesRank", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("SalesRanks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesRankReferenceHistory", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("SalesRankReferenceHistory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StockCsv", b =>
                {
                    b.HasOne("Offer", null)
                        .WithMany("StockCSV")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Upc", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("UpcList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Variation", b =>
                {
                    b.HasOne("Product", null)
                        .WithMany("Variations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Offer", b =>
                {
                    b.Navigation("CouponHistory");

                    b.Navigation("OfferCSV");

                    b.Navigation("StockCSV");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("CategoryTree");

                    b.Navigation("Contributors");

                    b.Navigation("EanList");

                    b.Navigation("Features");

                    b.Navigation("FrequentlyBoughtTogether");

                    b.Navigation("HazardousMaterials");

                    b.Navigation("Languages");

                    b.Navigation("Offers");

                    b.Navigation("Promotions");

                    b.Navigation("SalesRankReferenceHistory");

                    b.Navigation("SalesRanks");

                    b.Navigation("UpcList");

                    b.Navigation("Variations");
                });

            modelBuilder.Entity("ProductResponse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
